// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package settings

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"db-platform/models"
	"db-platform/views/layouts"
	"strconv"
)

func LDAPSettingsPage(conf models.LDAP) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-row gap-2\"><h1 class=\"text-2xl mr-auto\">AD Settings</h1><a class=\"bg-green-400 py-2 px-4 rounded\" href=\"/settings/ldap/cert\" id=\"editCertLink\">Edit Certificate</a> <button class=\"bg-yellow-400 py-2 px-4 rounded\" hx-post=\"/settings/ldap/test\" hx-target=\"#connectionRes\" hx-trigger=\"click\" hx-ext=\"disable-element\" hx-disable-element=\"self\">Test Conneciton</button> <a class=\"bg-blue-400 py-2 px-4 rounded\" href=\"/settings/ldap/credentials\">Edit Login Credentials</a></div><div class=\"flex flex-column justify-between py-2\"><form class=\"border rounded border-gray-500 p-5 w-fit flex flex-col gap-2\" hx-post=\"/settings/ldap\" hx-target=\"#response\"><div class=\"grid grid-cols-2 gap-y-2\"><label for=\"connectionStr\" class=\"align-center\">Connection String:</label> <input type=\"text\" name=\"connectionStr\" id=\"connectionStr\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(conf.ConnectionStr)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 41, Col: 32}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\"> <label>Domain</label> <input type=\"text\" name=\"domain\" id=\"domain\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(conf.TopLevelDomain + "." + conf.SecondLevelDomain)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 49, Col: 64}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"> <label>Base Group</label> <input type=\"text\" name=\"baseGroup\" id=\"baseGroup\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(conf.BaseGroup)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 57, Col: 28}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"> <label>Base Group OU</label> <input type=\"text\" name=\"baseGroupOU\" id=\"baseGroupOU\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(conf.BaseGroupOU)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 65, Col: 30}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"> <label>Admin Group</label> <input type=\"text\" name=\"adminGroup\" id=\"adminGroup\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(conf.AdminGroup)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 73, Col: 29}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\"> <label>Admin Group OU</label> <input type=\"text\" name=\"adminGroupOU\" id=\"adminGroupOU\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var8 string
			templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(conf.AdminGroupOU)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 81, Col: 31}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\"> <label>Time out in seconds</label> <input type=\"number\" name=\"timeOutInSecs\" id=\"timeOutInSecs\" class=\"border border-slate-400 rounded p-2\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var9 string
			templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(conf.TimeOutInSecs))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings/ldapSettings.templ`, Line: 89, Col: 46}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\"> <label>Make AD login page default:</label> <input type=\"checkbox\" name=\"isDefault\" id=\"isDefault\" class=\"border border-slate-400 rounded\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if conf.IsDefault {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "> <label>Enable TLS:</label> <input type=\"checkbox\" name=\"enableTLS\" id=\"enableTLS\" class=\"border border-slate-400 rounded\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if conf.EnableTLS {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "><div id=\"verifyCertContainer\" class=\"col-span-2\"><div class=\"grid grid-cols-2\"><label>Verify Certificate:</label> <input type=\"checkbox\" name=\"verifyCert\" id=\"verifyCert\" class=\"border border-slate-400 rounded\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if conf.VerifyCert {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, " checked")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "></div></div></div><button type=\"submit\" class=\"bg-blue-400 py-2 px-4 rounded\">Submit</button></form><div id=\"connectionRes\"></div></div><div id=\"response\"></div><script>\r\n\tfunction initializeLDAPSettingsPage() {\r\n\t\tconst enableTLSCheckbox = document.getElementById(\"enableTLS\");\r\n\t\tconst verifyCertContainer = document.getElementById(\"verifyCertContainer\");\r\n\t\tconst verifyCertCheckbox = document.getElementById(\"verifyCert\");\r\n\t\tconst editCertLink = document.getElementById(\"editCertLink\");\r\n\r\n\t\tfunction updateVisibility() {\r\n\t\t\tif (enableTLSCheckbox.checked) {\r\n\t\t\t\tverifyCertContainer.style.display = \"block\";\r\n\t\t\t} else {\r\n\t\t\t\tverifyCertContainer.style.display = \"none\";\r\n\t\t\t\tverifyCertCheckbox.checked = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (enableTLSCheckbox.checked && verifyCertCheckbox.checked) {\r\n\t\t\t\teditCertLink.style.display = \"inline\";\r\n\t\t\t} else {\r\n\t\t\t\teditCertLink.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (enableTLSCheckbox) {\r\n\t\t\tenableTLSCheckbox.addEventListener(\"change\", updateVisibility);\r\n\t\t\tverifyCertCheckbox.addEventListener(\"change\", updateVisibility);\r\n\t\t\tupdateVisibility();\r\n\t\t}\r\n\t}\r\n\r\n\t// Run initialization on page load\r\n\tdocument.addEventListener(\"DOMContentLoaded\", initializeLDAPSettingsPage);\r\n\r\n\t// Re-initialize after HTMX updates\r\n\tdocument.body.addEventListener(\"htmx:afterSwap\", function () {\r\n\t\tinitializeLDAPSettingsPage();\r\n\t});\r\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layouts.Setting().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
