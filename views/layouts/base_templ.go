// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Base(sideBar templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\" class=\"h-full m-0\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"stylesheet\" type=\"text/css\" href=\"/public/css/styles.css\"><script src=\"/public/js/htmx.min.js\"></script><title>DB Platform</title></head><body class=\"h-full m-0\"><nav class=\"bg-slate-300\"><ul class=\"flex justify-between items-center p-6\"><li><img src=\"/public/img/logo.png\" alt=\"logo\" class=\"max-w-36\"></li><li><div class=\"relative inline-block text-left\"><button type=\"button\" class=\"inline-flex w-full justify-center gap-x-1.5 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\" id=\"menu-button\" aria-expanded=\"false\" aria-haspopup=\"true\">Options <svg class=\"-mr-1 h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\"></path></svg></button><!-- Dropdown menu --><div class=\"absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden opacity-0 transform scale-95\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-button\" tabindex=\"-1\"><div class=\"py-1\" role=\"none\"><a href=\"/user/reset-password\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-0\">Reset password</a> <a href=\"/settings\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-1\">Admin panel</a> <a href=\"/logout\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-2\">Sign out</a></div></div></div></li></ul></nav><main class=\"h-full\"><div class=\"grid grid-cols-[300px_auto] h-full\"><div class=\"border-gray-600 border-r-2\"><ul class=\"p-5 grid gap-3\" hx-boost=\"true\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = sideBar.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div><div class=\"h-full p-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><script src=\"/public/js/disable-element.js\"></script><script>\r\n    \t\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\r\n    \t\t\t\t    // Event delegation on the document for the menu button\r\n    \t\t\t\t    document.addEventListener('click', function(event) {\r\n    \t\t\t\t        const menuButton = document.getElementById('menu-button');\r\n    \t\t\t\t        const menu = menuButton ? menuButton.nextElementSibling : null;\r\n\t\t\t\t\r\n    \t\t\t\t        if (!menuButton || !menu) return;\r\n\t\t\t\t\r\n    \t\t\t\t        if (menuButton.contains(event.target)) {\r\n    \t\t\t\t            // Toggle the dropdown when the button is clicked\r\n    \t\t\t\t            const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';\r\n    \t\t\t\t            menuButton.setAttribute('aria-expanded', !isExpanded);\r\n    \t\t\t\t            menu.classList.toggle('hidden');\r\n    \t\t\t\t            menu.classList.toggle('opacity-0');\r\n    \t\t\t\t            menu.classList.toggle('transform');\r\n    \t\t\t\t            menu.classList.toggle('scale-95');\r\n    \t\t\t\t        } else if (!menu.contains(event.target)) {\r\n    \t\t\t\t            // Close the menu if clicked outside\r\n    \t\t\t\t            menuButton.setAttribute('aria-expanded', 'false');\r\n    \t\t\t\t            menu.classList.add('hidden');\r\n    \t\t\t\t            menu.classList.add('opacity-0');\r\n    \t\t\t\t            menu.classList.add('transform');\r\n    \t\t\t\t            menu.classList.add('scale-95');\r\n    \t\t\t\t        }\r\n    \t\t\t\t    });\r\n    \t\t\t\t});\r\n\t\t\t\t\r\n    \t\t\t\t// Reattach the event listener after an HTMX content swap\r\n    \t\t\t\tdocument.body.addEventListener('htmx:afterSettle', function() {\r\n    \t\t\t\t    const menuButton = document.getElementById('menu-button');\r\n    \t\t\t\t    const menu = menuButton ? menuButton.nextElementSibling : null;\r\n\t\t\t\t\r\n    \t\t\t\t    if (menuButton && menu) {\r\n    \t\t\t\t        menuButton.setAttribute('aria-expanded', 'false');\r\n    \t\t\t\t        menu.classList.add('hidden');\r\n    \t\t\t\t        menu.classList.add('opacity-0');\r\n    \t\t\t\t        menu.classList.add('transform');\r\n    \t\t\t\t        menu.classList.add('scale-95');\r\n    \t\t\t\t    }\r\n    \t\t\t\t});\r\n\t\t\t\t</script></main></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
