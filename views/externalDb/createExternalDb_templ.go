// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package externalDb

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/ygorcarmo/db-platform/views/layouts"

func ExternalDbPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h1 class=\"text-2xl\">Add New Database</h1><form class=\"border rounded border-gray-500 p-5 w-fit flex flex-col gap-2\" hx-post=\"/settings/dbs/create\" hx-target=\"#response\"><div class=\"grid grid-cols-2 gap-y-2\"><label for=\"username\" class=\"col-start-1\">Username: </label> <input type=\"text\" name=\"username\" id=\"username\" class=\"border border-slate-400 rounded p-2\" required> <label for=\"password\" class=\"col-start-1\">Password: </label><div class=\"relative col-start-2 flex\"><input type=\"password\" name=\"password\" id=\"password\" class=\"border border-slate-400 rounded p-2 flex-grow\" required> <button type=\"button\" class=\"ml-2 text-sm text-gray-600 hover:text-gray-900\" onclick=\"togglePassword()\">Show</button></div><label for=\"name\" class=\"col-start-1\">Database Name: </label> <input type=\"text\" name=\"name\" id=\"name\" class=\"border border-slate-400 rounded p-2\" required> <label for=\"host\" class=\"col-start-1\">Host: </label> <input type=\"text\" name=\"host\" id=\"host\" class=\"border border-slate-400 rounded p-2\" required> <label for=\"port\" class=\"col-start-1\">Port: </label> <input type=\"number\" name=\"port\" id=\"port\" class=\"border border-slate-400 rounded p-2\" required> <label for=\"type\">Type: </label> <select name=\"type\" id=\"type\"><option value=\"postgres\">postgres</option> <option value=\"mysql\">mysql/maria</option> <option value=\"oracle\">oracle</option></select> <label for=\"sslMode\">SSL Mode: </label> <select name=\"sslMode\" id=\"sslMode\"><option value=\"disable\">disable</option> <option value=\"require\">require</option> <option value=\"verify-ca\">verify-ca</option> <option value=\"verify-full\">verify-full</option></select></div><button type=\"submit\" class=\"bg-blue-400 py-2 px-4 rounded\">Submit</button></form><div id=\"response\"></div><script>\r\n\t\t\tfunction togglePassword() {\r\n\t\t\t\tvar passwordInput = document.getElementById('password');\r\n\t\t\t\tvar showButton = event.target;\r\n\t\t\t\tif (passwordInput.type === 'password') {\r\n\t\t\t\t\tpasswordInput.type = 'text';\r\n\t\t\t\t\tshowButton.textContent = 'Hide';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpasswordInput.type = 'password';\r\n\t\t\t\t\tshowButton.textContent = 'Show';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layouts.Setting().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
